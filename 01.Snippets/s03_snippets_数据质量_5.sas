/*****************************************************************************/
/* The snippet shows how to use the DQPARSE function to return  a delimited  */
/* string of parse token values and the QPARSETOKENGET function to return a  */
/* parse token value from a delimited string of parse token values.          */
/*****************************************************************************/

/**************************************************************************/
/* Set system options values and load locale(s) into memory               */
/**************************************************************************/
%dqload();

data parseName;
   length familyName $ 50;
   length name $ 100;
   length parsedValue $100;

   name='Mrs. Sallie Mae Pravlik';

   /* Run the DQPARSE function to parse the name. The required arguments     */
   /* specified are character-value (name) and parse-definition ('Name').    */
   /* The optional argument specifeied is locale ('ENUSA').                  */
   parsedValue=dqParse(name, 'Name', 'ENUSA');
   put parsedvalue=;

   /* Run the DQPARSETOKENGET function to parse a delimited string of parse  */
   /* token value that has been generated by the parse-definition.           */
   /* The required arguments are delimited-string (parsedValue), token       */
   /* ('Family Name') and parse-definition ('Name'). The optional argument   */
   /* specified is locale ('ENUSA').                                         */
   familyName=dqParseTokenGet(parsedvalue, 'Family Name', 'Name', 'ENUSA');
   put familyname=;
run;
