

/* */
DATA t3;
SET t1 t2;
RUN;


/* */
OPTIONS COMPRESS = YES;


/* */
DATA TEST_X1;
INPUT NAME $ PRODUCT $ TYPE $;
CARDS;
A CAR 40
B CAR 42
C BUS 44
D MOTO 9
E BUS 10
;
RUN;

PROC PRINT DATA = TEST_X1;
RUN;


/* */
DATA TEST_X2;
INPUT NAME $ PRODUCT $ TYPE $;
CARDS;
A CAR 40
C CAR 42
B BUS 44
H MOTO 9
J BUS 10
;
RUN;

PROC PRINT DATA = TEST_X2;
RUN;


/* */
DATA TEST_Y;
INPUT NAME $ NPRODUCT $ NTYPE $;
CARDS;
A APPLE 38
B BANANA 42
C CAT 44
D DOG 9
E EGG 10
;
RUN;

PROC PRINT DATA = TEST_Y;
RUN;


/* */
DATA TEST_Z;
INPUT NAME $ NPRODUCT $ NTYPE $;
CARDS;
A APPLE 38
A BANANA 42
B CAT 44
B DOG 9
B EGG 10
;
RUN;

PROC PRINT DATA = TEST_Z;
RUN;


/* */
DATA A1_1;
SET TEST_X1 TEST_X2;
RUN;

PROC PRINT DATA = A1_1;
RUN;


/* */
DATA A1_2;
SET TEST_X1 TEST_Y;
RUN;

PROC PRINT DATA = A1_2;
RUN;


/* */
DATA A1_3;
SET 
    TEST_X1 
    TEST_Y(
        RENAME = (
            NPRODUCT = PRODUCT 
            NTYPE = TYPE
        )
    )
;
RUN;

PROC PRINT DATA = A1_3;
RUN;


/* */
DATA t3;
MERGE t1(IN=A) t2(IN=B);
BY n1;
IF A; /* 左连接，右连接，内连接，全连接 */
RUN;


/* */
PROC SORT DATA = TEST_X2;
BY NAME;
RUN;

PROC SORT DATA = TEST_Y;
BY NAME;
RUN;

PROC SORT DATA = TEST_Z;
BY NAME;
RUN;

DATA A2;
MERGE TEST_X2(IN=A) TEST_Y(IN=B);
BY NAME;
IF A;
RUN;

PROC PRINT DATA = A2;
RUN;


/* */
DATA A2_1;
MERGE TEST_X2(IN=A) TEST_Y(IN=B);
BY NAME;
IF NOT A;
RUN;

PROC PRINT DATA = A2_1;
RUN;


/* */
DATA A3;
MERGE TEST_X2(IN=A) TEST_Y(IN=B);
BY NAME;
IF B;
RUN;

PROC PRINT DATA = A3;
RUN;


/* */
DATA A4;
MERGE TEST_X2(IN=A) TEST_Y(IN=B);
BY NAME;
IF A AND B;
RUN;

PROC PRINT DATA = A4;
RUN;


/* */
DATA A5;
MERGE TEST_X2(IN=A) TEST_Y(IN=B);
BY NAME;
RUN;

PROC PRINT DATA = A5;
RUN;


/* */
DATA A51;
MERGE TEST_X2(IN=A) TEST_Y(IN=B);
BY NAME;
IF A OR B;
RUN;

PROC PRINT DATA = A51;
RUN;


/* */
DATA A6;
MERGE TEST_X2(IN=A) TEST_Z(IN=B);
BY NAME;
IF A;
RUN;

PROC PRINT DATA = A6;
RUN;


/* */
DATA A7;
MERGE TEST_Z(IN=A) TEST_Z(IN=B);
BY NAME;
IF A AND B;
RUN;

PROC PRINT DATA = A7;
RUN;


/* */
PROC SQL;
SELECT
    A.NAME AS ANAME,
    A.NPRODUCT AS ANPRODUCT,
    A.NTYPE AS ANTYPE,
    B.NPRODUCT AS BNPRODUCT,
    B.NTYPE AS BNTYPE
FROM TEST_Z AS A LEFT JOIN TEST_Z AS B
ON A.NAME = B.NAME
;
QUIT;
